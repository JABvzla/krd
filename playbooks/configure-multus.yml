---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2018
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
- hosts: kube-master
  tasks:
    - name: make local copy of daemon and configmap flannel objects
      fetch:
        src: /etc/kubernetes/cni-flannel.yml
        dest: /tmp/cni-flannel.yml
        flat: yes

- hosts: kube-node:kube-master
  vars:
    multus_version: 2.0
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin/"
  roles:
    - role: andrewrothstein.go
  tasks:
    - name: download Multus tarball
      get_url:
        url: "https://github.com/intel/multus-cni/archive/v{{ multus_version }}.tar.gz"
        dest: /tmp/multus.tar.gz
    - name: extract multus source code
      command: tar -C /tmp/ -xzf /tmp/multus.tar.gz
    - name: build multus source code
      command: ./build
      args:
        chdir: "/tmp/multus-cni-{{ multus_version }}"
    - name: create multus binary folder
      file:
        state: directory
        path: /opt/cni/bin
    - name: copy multus binary to opt folder
      become: yes
      command: "mv /tmp/multus-cni-{{ multus_version }}/bin/multus /opt/cni/bin"

- hosts: localhost
  roles:
    - andrewrothstein.kubectl
  tasks:
    - name: replace CNI flannel configuration
      replace:
        path: /tmp/cni-flannel.yml
        before: 'net-conf.json:.*'
        regexp: '\ *\"plugins\":\[((.|\n)*)\]'
        replace: |2
                "plugins": [
                  {
                    "type": "multus",
                    "kubeconfig": "/etc/kubernetes/node-kubeconfig.yaml",
                    "delegates": [
                      {
                        "type": "flannel",
                        "masterplugin": true,
                        "delegate": {
                          "isDefaultGateway": true
                        }
                      },
                      {
                        "name": "mynet",
                        "type": "bridge",
                        "bridge": "mynet0",
                        "isDefaultGateway": true,
                        "forceAddress": false,
                        "ipMasq": true,
                        "hairpinMode": true,
                        "ipam": {
                          "type": "host-local",
                          "subnet": "10.10.0.0/16"
                        }
                      }
                    ]
                  }
                ]
    - name: delete ConfigMap and DaemonSet Flannel objects
      shell: "/usr/local/bin/kubectl delete {{ item.type }} {{ item.name }} -n=kube-system"
      ignore_errors: True
      with_items:
      - { type: "configmap", name: "kube-flannel-cfg" }
      - { type: "daemonset", name: "kube-flannel" }
    - name: define a CRD network object specification
      blockinfile:
        path: /tmp/crdnetwork.yml
        create: yes
        block: |
          apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            # name must match the spec fields below, and be in the form: <plural>.<group>
            name: networks.kubernetes.com
          spec:
            # group name to use for REST API: /apis/<group>/<version>
            group: kubernetes.com
            # version name to use for REST API: /apis/<group>/<version>
            version: v1
            # either Namespaced or Cluster
            scope: Namespaced
            names:
              # plural name to be used in the URL: /apis/<group>/<version>/<plural>
              plural: networks
              # singular name to be used as an alias on the CLI and for display
              singular: network
              # kind is normally the CamelCased singular type. Your resource manifests use this.
              kind: Network
              # shortNames allow shorter string to match your resource on the CLI
              shortNames:
              - net
    - name: define network objects
      blockinfile:
        path: "/tmp/{{ item }}-network.yml"
        create: yes
        block: |
          apiVersion: "kubernetes.com/v1"
          kind: Network
          metadata:
            name: "{{ item }}-conf"
          plugin: "{{ item }}"
      with_items:
      - flannel
      - bridge
    - name: create network objects
      shell: "/usr/local/bin/kubectl create -f /tmp/{{ item }}.yml"
      ignore_errors: True
      with_items:
      - crdnetwork
      - cni-flannel
      - flannel-network
      - bridge-network
