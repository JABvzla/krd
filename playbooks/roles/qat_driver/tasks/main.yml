---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2019 Intel Corporation
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

- include: cleanup.yml

- include: bootstrap.yml

- name: retrieve QAT driver
  get_url:
    url: "{{ qat_driver_url }}"
    dest: "/tmp/qat.tar.gz"

- name: create qat folder
  file:
    state: directory
    path: "{{ qat_driver_dest }}"

- name: extract qat driver source code
  unarchive:
    src: "/tmp/qat.tar.gz"
    dest: "{{ qat_driver_dest }}"
    remote_src: yes

- name: configure qat driver source code
  command: ./configure --enable-icp-sriov=guest
  args:
    chdir: "{{ qat_driver_dest }}"

- name: build qat driver
  make:
    chdir: "{{ qat_driver_dest }}"
    target: "{{ item }}"
  loop:
    - clean
    - uninstall
    - install

- name: create qat_service systemd wrapper
  copy:
    src: qat_service.service
    dest: /etc/systemd/system/qat_service.service

- name: reload qat_service service
  service:
    name: "qat_service"
    state: reloaded

- name: start qat_service service
  service:
    name: "qat_service"
    state: started
    enabled: yes

- name: get qat devices
  shell: /usr/local/bin/adf_ctl status | grep up | awk '{print $4 substr($1, 4)}' | tr -d ','
  register: qat_devices

- name: ensure SHIM config section
  blockinfile:
    dest: "/etc/{{ item }}.conf"
    block: |
      [SHIM]
      NumberCyInstances = 1
      NumberDcInstances = 0
      NumProcesses = 2
      LimitDevAccess = 0
      # Crypto - User instance #0
      Cy0Name = "UserCY0"
      Cy0IsPolled = 1
      # List of core affinities
      Cy0CoreAffinity = 0
  loop: "{{ qat_devices.stdout_lines }}"

- name: restart qat services
  command: /usr/local/bin/adf_ctl restart
